Fit_ijkl::Fit_ijkl(
    int i,
    int j,
    int k,
    int l,
    const DisplacementIteratorPtr& iter
)
{
    vector<double> disps;
    int ncoord = iter->ncoord();
    DisplacementPtr disp;


    disps.clear(); disps.assign(ncoord, 0);
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[k] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[k] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.166666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.333333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,  -0.458333333333);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = 1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = -1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = 1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = -1;
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[j] = 1;
    disps[k] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = -1;
    disps[k] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = -1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[k] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disps[k] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.041666666667);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = 1;
    disps[j] = 1;
    disps[k] = 1;
    disps[l] = 1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.500000000000);


    disps.clear(); disps.assign(ncoord, 0);
    disps[i] = -1;
    disps[j] = -1;
    disps[k] = -1;
    disps[l] = -1;
    disp = iter->getDisplacement(disps);
    addPoint(disp,   0.500000000000);
}


